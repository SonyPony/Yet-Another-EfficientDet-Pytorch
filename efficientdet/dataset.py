import os
import torch
import numpy as np
from scipy import ndimage

from torch.utils.data import Dataset, DataLoader
from pycocotools.coco import COCO
import cv2

class BarcodeDataset(Dataset):
    def __init__(self, root_dir, set_name, train_set=True, data_dir="data", ann_dir="barcode_label", transform=None):

        self.root_dir = os.path.join(root_dir, set_name)
        self.data_dir = data_dir
        self.ann_dir = ann_dir
        self.transform = transform

        #self.coco = COCO(os.path.join(self.root_dir, 'annotations', 'instances_' + self.set_name + '.json'))
        #self.image_ids = self.coco.getImgIds()
        self.image_ids = ["004898", "000949", "000213", "001466", "004930", "003581", "002234", "000245", "001498", "000277", "001530", "004994", "002298", "000309", "001562", "005026", "003677", "001077", "001594", "005058", "003710", "001109", "002362", "000373", "001626", "005090", "003742", "004354", "001141", "003005", "002394", "000405", "001658", "003774", "001173", "000437", "005154", "003806", "001205", "003069", "000469", "001722", "005186", "003838", "004450", "001237", "001754", "005218", "003871", "004482", "001270", "002522", "005250", "003903", "004514", "002554", "000565", "001818", "005282", "003935", "002586", "000597", "005314", "003967", "004578", "001367", "002618", "001882", "005346", "003999", "001399", "002650", "000661", "001914", "005378", "004031", "004642", "001431", "000693", "005410", "004063", "004674", "001978", "005442", "004095", "004706", "000757", "002010", "000021", "004127", "004738", "000789", "002042", "000053", "004159", "004770", "003421", "002810", "000821", "002074", "000085", "004191", "004802", "002106", "000117", "004223", "004834", "003485", "000885", "004255", "004866", "003517", "000917", "002170", "004290", "004901", "000952", "002205", "000216", "004933", "000984", "001501", "004965", "003616", "002269", "000280", "004997", "003648", "001048", "002301", "001565", "005029", "003680", "001080", "002944", "002333", "001597", "005061", "003713", "001112", "002365", "005093", "003745", "004357", "001144", "002397", "005125", "003777", "001176", "002429", "001693", "003809", "003072", "002461", "001725", "005189", "004453", "001757", "003874", "004485", "001273", "003136", "002525", "001789", "005253", "003906", "001305", "002557", "000568", "001821", "005285", "003938", "004549", "001853", "005317", "003970", "004581", "001370", "002621", "000632", "001885", "005349", "004002", "004613", "001402", "000664", "004034", "004645", "000696", "001949", "005413", "004066", "004677", "002717", "000728", "004709", "002749", "002013", "000024", "004130", "002781", "000792", "002045", "000056", "004162", "004773", "003424", "000088", "004194", "004805", "000856", "002109", "000120", "004226", "000152", "004258", "000920", "002173", "000184", "000187", "004904", "002208", "001472", "004325", "004936", "000987", "002240", "001504", "004968", "003619", "002272", "000283", "001536", "005000", "001051", "002304", "000315", "001568", "005032", "001083", "001600", "005064", "003716", "001115", "002368", "000379", "001632", "003748", "004360", "001147", "005128", "003780", "001179", "002432", "000443", "001696", "003812", "004424", "000475", "001728", "005192", "003844", "004456", "001243", "002496", "005224", "003877", "002528", "005256", "003909", "004520", "001308", "000571", "001824", "005288", "003941", "004552", "001341", "003203", "000603", "001856", "005320", "003973", "001373", "002624", "000635", "005352", "001405", "001920", "005384", "004037", "004648", "001437", "000699", "001952", "004069", "004680", "003331", "002720", "000731", "001984", "005448", "004101", "004712", "002016", "000027", "004133", "004744", "002784", "000795", "002048", "000059", "004165", "004776", "003427", "002816", "000827", "000091", "004197", "004808", "002848", "000859", "004229", "000155", "004261", "004872", "003523", "002176", "002179", "004296", "004907", "003558", "000958", "001475", "004939", "000990", "002243", "000254", "001507", "002275", "000286", "001539", "005003", "001054", "002918", "002307", "000318", "001571", "005035", "002950", "002339", "000350", "001603", "005067", "003719", "001118", "002371", "000382", "005099", "003751", "004363", "001150", "001667", "005131", "003783", "004395", "001182", "003046", "002435", "000446", "001699", "005163", "004427", "003078", "002467", "003847", "004459", "001246", "000510", "003880", "004491", "001279", "002531", "000542", "005259", "003912", "004523", "001311", "000574", "001827", "005291", "002595", "001859", "005323", "003976", "004587", "001376", "002627", "001891", "005355", "004008", "004619", "001408", "003270", "000670", "005387", "001440", "003302", "005419", "004683", "000734", "000766", "002019", "000030", "004136", "000798", "002051", "000062", "004168", "004779", "002819", "000830", "000094", "004200", "004811", "003462", "000862", "002115", "000126", "004232", "004843", "000894", "000158", "004264", "003526", "000926", "002182", "001446", "004299", "003561", "002214", "000225", "004331", "004942", "000993", "002246", "001025", "002278", "000289", "001542", "005006", "002310", "005038", "002342", "000353", "001606", "005070", "003722", "002985", "000385", "001638", "005102", "003754", "004366", "001153", "001670", "005134", "003786", "004398", "000449", "001702", "003818", "003081", "000481", "005198", "003850", "001766", "003883", "002534", "001798", "003915", "004526", "001314", "002566", "001830", "005294", "003947", "001347", "000609", "001862", "005326", "004590", "001379", "000641", "005358", "004011", "004622", "001411", "001926", "005390", "004043", "004654", "003305", "001958", "004075", "000737", "000001", "005454", "004107", "004718", "000769", "000033", "005486", "004139", "004750", "000801", "000065", "004171", "004782", "002822", "002086", "000097", "004203", "004814", "000865", "002118", "000129", "004235", "004846", "002886", "000161", "004267", "004878", "003529", "000929", "002185", "000196", "001449", "004302", "003564", "000964", "002217", "001481", "004945", "000996", "000260", "001513", "004977", "003628", "001028", "002281", "000292", "001545", "005009", "001060", "002313", "000324", "001577", "005041", "002956", "000356", "005073", "003725", "004337", "000388", "001641", "003757", "004369", "001156", "003020", "001673", "003789", "004401", "001188", "000452", "001705", "003821", "001220", "003084", "002473", "000484", "005201", "003853", "004465", "001253", "002505", "000516", "001769", "005233", "003886", "004497", "001285", "002537", "000548", "005265", "003918", "001317", "002569", "000580", "001833", "005297", "003950", "001350", "000612", "001865", "005329", "004593", "001382", "005361", "004014", "004625", "001414", "003276", "004046", "004657", "003308", "000708", "005425", "004078", "004689", "000740", "001993", "000004", "004110", "004721", "002761", "000772", "002025", "000036", "004142", "004753", "003404", "002793", "000804", "002057", "000068", "004174", "004785", "002089", "000100", "004206", "004817", "000868", "002121", "000132", "004238", "000900", "002153", "004270", "004881", "003532", "000935", "002188", "001452", "004916", "003567", "002220", "002252", "000263", "001516", "004980", "003631", "002284", "000295", "001548", "005012", "002927", "000327", "001580", "005044", "003695", "001095", "000359", "001612", "005076", "003728", "004340", "001127", "000391", "001644", "005108", "003760", "004372", "001159", "002412", "000423", "003792", "004404", "000455", "001708", "003824", "004436", "001223", "000487", "001740", "003856", "004468", "002508", "001772", "005236", "003889", "004500", "001804", "005268", "003921", "001320", "001836", "005300", "003953", "001353", "001868", "005332", "003985", "001385", "002636", "001900", "005364", "004017", "004628", "003279", "004049", "004660", "000711", "005428", "004081", "004692", "002732", "000743", "001996", "004113", "004724", "002764", "000775", "002028", "000039", "004756", "002796", "000807", "002060", "000071", "004177", "004788", "000839", "002092", "000103", "004209", "004820", "003471", "000871", "004241", "004852", "000903", "000167", "004273", "004884", "002191", "000202", "001455", "004308", "004919", "003570", "000970", "002223", "001487", "004951", "003602", "001002", "002255", "001519", "004983", "001034", "002898", "001551", "005015", "001066", "002319", "000330", "001583", "005047", "003699", "001098", "001615", "005079", "003731", "004343", "001130", "002383", "000394", "005111", "003763", "004375", "002415", "000426", "005143", "003795", "004407", "001194", "000458", "001711", "005175", "003827", "004439", "001226", "003090", "002479", "001743", "005207", "003859", "003122", "002511", "000522", "005239", "003892", "004503", "001291", "001807", "005271", "004535", "001323", "001839", "005303", "003956", "000618", "001871", "005335", "003988", "001388", "002639", "001903", "005367", "004020", "003282", "000682", "001935", "005399", "004052", "004663", "002703", "000714", "001967", "005431", "004084", "004695", "003346", "002735", "000746", "001999", "000010", "005463", "004116", "004727", "002031", "000042", "004148", "004759", "002799", "002063", "000074", "004791", "002831", "000842", "002095", "000106", "004212", "004823", "000874", "002127", "004244", "004855", "004276", "004887", "000941", "002194", "004311", "004922", "000973", "002226", "001490", "001005", "000269", "001522", "003637", "001037", "002901", "002290", "000301", "001554", "005018", "003669", "002933", "005050", "002965", "002354", "000365", "005082", "003734", "004346", "002386", "000397", "005114", "003766", "004378", "000429", "005146", "003798", "001197", "002450", "000461", "001714", "005178", "003830", "004442", "001229", "003093", "002482", "005210", "002514", "000525", "001778", "005242", "003895", "004506", "000557", "001810", "003927", "004538", "002578", "000589", "001842", "005306", "003959", "004570", "001359", "000621", "001874", "005338", "003991", "004602", "001391", "002642", "000653", "001906", "005370", "004023", "004634", "001938", "004055", "004666", "000717", "005434", "004087", "004698", "000749", "002002", "005466", "004119", "004730", "000781", "000045", "004762", "002802", "000813", "002066", "000077", "004183", "004794", "003445", "000845", "000109", "004826", "003477", "002130", "000141", "004858", "003509", "000909", "004279", "004890", "004893", "003544", "002197", "004314", "003576", "000976", "002229", "001493", "004957", "002261", "000272", "001525", "003640", "001040", "002293", "000304", "001557", "005021", "001072", "000336", "001589", "001104", "002968", "002357", "000368", "001621", "003737", "004349", "001136", "002389", "000400", "005117", "003769", "004381", "001168", "002421", "000432", "003801", "001200", "001717", "003833", "004445", "001232", "000496", "005213", "003865", "004477", "002517", "001781", "005245", "003898", "004509", "000560", "001813", "005277", "003930", "001330", "000592", "001845", "005309", "003962", "004573", "001362", "003224", "002613", "000624", "001877", "003994", "004605", "001394", "000656", "001909", "005373", "004026", "004637", "001426", "002677", "005405", "004058", "004669", "000720", "005437", "000752", "002005", "000016", "004122", "004733", "002773", "000784", "000048", "004154", "003416", "002805", "000816", "002069", "000080", "004186", "004797", "002101", "000112", "004829", "003480", "002133", "004250", "003512", "000912", "002165", "004282", "004896", "000947", "002200", "000211", "001464", "004317", "004928", "000979", "002232", "000243", "001496", "004960", "001011", "002264", "000275", "001528", "004992", "003643", "001043", "002296", "000307", "005024", "001075", "002328", "001592", "005056", "003708", "002360", "001624", "005088", "003740", "004352", "001139", "002392", "000403", "001656", "003772", "004384", "001171", "000435", "001688", "005152", "003804", "004416", "000467", "001720", "003836", "004448", "001235", "003099", "002488", "000499", "001752", "005216", "003869", "000531", "005248", "003901", "001300", "002552", "000563", "001816", "005280", "003933", "004544", "001333", "000595", "001848", "005312", "003965", "004576", "002616", "000627", "005344", "003997", "004608", "001397", "002648", "000659", "001912", "005376", "004029", "004640", "001429", "003291", "001944", "004061", "004672", "003323", "002712", "001976", "005440", "004093", "004704", "000755", "002008", "000019", "000051", "004157", "004768", "002808", "002072", "000083", "004189", "004800", "002840", "000851", "002104", "000115", "002872", "002136", "004253", "004864", "000915", "003550", "000950", "002203", "003582", "000246", "001499", "004963", "003614", "001014", "002267", "001531", "004995", "003646", "001046", "002299", "002331", "000342", "001595", "003711", "002974", "002363", "000374", "001627", "003743", "004355", "001659", "005123", "003775", "000438", "005155", "003807", "004419", "003070", "000310", "001563", "001723", "003839", "002942", "004451", "001238", "000502", "001271", "001755", "005219", "003872", "000566", "002523", "000534", "001819", "005283", "003936", "001336", "003198", "001851", "001883", "005347", "004000", "001787", "005251", "003904", "005315", "003968", "004579", "003230", "004611", "001400", "003262", "002619", "000630", "000694", "005411", "000662", "004064", "004675", "001915", "005379", "000726", "001979", "005443", "004032", "004707", "004643", "001432", "000758", "002011", "000022", "000054", "004160", "003454", "004128", "000854", "004224", "003486", "000886", "002139", "000150", "004256", "004867", "000822", "000086", "004192", "000918", "004803", "000953", "002171", "000182", "002206", "004902", "000217", "001470", "000985", "004934", "000281", "001502", "004998", "001049", "001598", "005062", "003714", "004966", "001113", "002366", "000377", "005094", "003746", "002302", "004358", "001145", "000409", "000313", "001662", "005126", "005030", "003778", "004390", "002430", "001209", "003073", "002462", "000473", "005222", "003875", "001274", "003137", "002526", "000537", "001694", "001790", "003810", "003907", "003842", "001306", "001241", "003105", "002494", "001758", "002590", "001822", "005286", "000601", "003939", "001854", "004550", "001339", "000633", "001886", "005350", "004003", "004614", "001403", "000665", "005382", "004035", "001435", "000697", "001950", "004067", "004678", "000729", "001982", "005446", "004099", "004710", "000761", "000025", "005478", "004131", "004742", "002782", "000793", "000057", "004163", "004774", "003425", "002814", "000825", "000089", "004195", "004806", "003457", "002846", "005318", "003971", "004582", "001371", "000857", "003489", "002142", "000153", "004259", "000921", "002174", "004294", "004905", "000956", "001473", "004937", "000988", "001505", "004969", "003620", "002273", "000284", "001537", "005001", "003652", "001052", "002916", "002305", "000316", "001569", "003684", "002948", "001601", "005065", "002980", "001633", "005097", "003749", "004361", "001148", "002401", "002433", "000444", "001697", "005161", "003813", "001665", "005129", "003781", "001212", "001180", "002465", "000476", "001244", "001761", "001793", "003910", "001342", "001277", "002593", "000604", "000572", "001825", "005289", "005321", "003942", "004553", "003974", "004006", "004617", "001374", "000668", "001921", "002625", "004649", "000636", "005353", "001438", "002689", "004070", "004681", "004713", "002721", "002753", "000732", "002049", "002017", "000060", "004166", "004777", "003428", "002817", "000028", "002081", "000092", "004198", "004745", "003396", "000892", "002145", "004809", "003460", "000860", "004230", "004841", "003492", "002177", "002180", "004297", "004908", "002212", "004262", "004873", "000924", "000223", "000255", "001476", "004329", "001508", "004972", "001023", "002276", "000991", "005036", "005004", "001087", "002951", "002308", "005068", "003720", "001119", "002404", "001668", "003784", "004396", "000447", "001700", "005164", "000383", "005100", "003752", "004364", "001151", "004460", "001247", "002500", "003913", "004524", "001312", "000575", "005292", "003945", "004556", "001764", "005228", "003881", "004492", "001280", "002532", "001796", "001732", "004588", "005356", "002628", "004009", "003271", "001892", "000671", "004041", "000703", "005420", "004073", "004684", "000767", "002020", "000031", "005484", "002788", "001441", "000735", "001988", "004716", "003207", "002596", "000607", "005324", "002820", "000831", "002084", "000095", "004201", "004812", "003463", "000863", "002116", "004233", "002884", "000895", "002148", "004265", "004876", "003527", "000927", "002183", "001447", "004300", "000962", "002215", "000799", "002052", "000063", "004169", "004780", "002247", "000258", "001511", "000226", "004332", "003658", "001058", "002311", "000322", "005039", "003690", "004975", "001026", "002890", "002279", "001543", "005007", "003723", "001122", "002375", "001639", "005103", "003755", "004367", "002407", "001671", "005135", "003787", "004399", "002954", "001607", "005071", "002471", "000482", "001186", "003851", "004463", "003114", "002503", "005231", "002439", "003884", "000450", "004495", "001703", "005167", "003819", "001218", "003082", "004527", "001315", "002567", "000546", "000578", "003916", "001831", "005327", "005295", "003980", "004591", "003948", "001380", "001895", "005359", "004012", "004623", "001412", "003274", "003210", "002599", "004044", "002727", "000738", "000610", "000706", "001959", "005423", "004687", "002759", "002023", "000034", "005487", "004783", "003434", "004140", "002087", "000098", "002055", "000066", "004815", "004172", "000130", "003466", "004236", "003498", "002151", "004268", "004879", "005455", "004108", "004719", "000866", "000930", "000933", "002186", "001482", "004946", "002119", "000197", "001450", "004303", "003565", "003597", "000965", "002218", "000997", "001514", "002250", "003629", "001546", "002282", "000293", "005010", "003661", "001093", "002957", "002346", "000357", "001610", "005074", "002314", "003726", "000325", "005106", "003758", "004370", "001157", "003053", "002442", "000453", "001706", "003822", "002989", "001221", "002378", "003085", "002410", "002474", "001738", "005202", "003854", "004466", "001254", "003117", "005138", "003790", "004402", "001189", "002506", "000517", "001770", "005234", "003887", "004498", "001286", "002538", "001802", "005266", "003919", "004530", "001318", "002570", "000581", "001834", "005298", "003951", "001351", "003213", "002602", "000613", "005330", "003983", "001383", "001898", "005362", "004015", "004626", "005394", "004658", "000741", "001994", "000709", "001962", "005426", "005458", "004079", "004111", "000773", "002026", "004722", "000037", "002794", "000805", "005490", "004143", "004754", "004818", "004239", "003469", "002858", "000869", "004850", "000901", "002154", "004271", "000936", "002189", "001453", "000200", "004306", "000968", "002221", "004917", "001000", "001485", "002253", "001517", "003632", "002285", "000296", "005013", "000069", "004175", "003437", "000837", "002090", "000101", "004207", "000328", "001581", "005045", "003696", "001096", "002349", "000360", "005077", "003729", "004341", "001128", "002381", "001645", "005109", "003761", "004373", "003024", "002413", "000424", "001677", "005141", "003793", "004405", "003056", "002445", "001709", "003825", "001224", "002477", "000488", "001741", "003857", "004469", "001257", "002509", "000520", "001773", "005237", "003890", "004501", "001289", "002541", "005269", "003922", "004533", "001321", "000584", "003954", "002573", "005301", "001354", "003216", "001869", "002605", "005333", "003986", "001386", "000648", "001901", "005365", "004018", "004629", "001418", "000680", "005397", "004050", "004661", "000712", "001965", "005429", "005429", "004082", "004693", "000744", "001997", "000008", "004114", "004725", "002765", "000776", "002029", "000040", "004757", "002061", "000072", "004178", "004789", "002093", "004210", "004821", "003472", "002125", "000904", "004242", "004853", "003504", "002157", "004274", "003536", "004885", "005272", "001035", "002192", "004117", "004536", "005304", "001067", "004149", "004568", "000331", "003411", "005336", "001099", "002256", "004181", "004600", "001520", "005368", "001131", "002288", "004213", "004632", "000395", "001552", "003475", "004245", "004664", "000427", "001584", "003507", "005432", "001195", "002352", "004277", "004696", "000459", "001616", "005464", "002384", "004309", "000491", "001648", "002416", "003603", "001292", "002448", "000555", "001712", "001324", "004824", "004856", "000587", "001744", "003667", "001357", "002512", "003732", "001421", "000619", "002576", "000683", "001840", "003764", "003700", "002608", "000715", "003796", "003059", "000747", "001904", "003828", "003091", "001936", "003860", "000043", "003123", "002704", "005048", "002736", "000811", "005080", "000843", "002000", "003925", "004344", "001968", "003893", "000075", "005112", "000875", "002032", "004376", "005176", "000939", "004021", "004440", "001389", "002544", "001808", "000107", "002800", "005144", "000907", "002064", "003989", "004408", "002864", "005208", "000971", "002128", "004053", "005240", "001003", "002160", "004085", "004504", "000267", "005275", "001038", "002195", "004120", "004539", "000302", "005307", "002227", "004152", "004571", "003414", "005339", "001102", "002259", "004184", "004603", "001523", "003446", "005371", "001134", "004635", "001555", "003478", "005403", "001166", "004248", "004667", "000430", "001587", "003510", "005435", "001198", "002355", "004280", "004699", "003542", "005467", "001230", "002387", "004731", "001651", "003574", "001263", "000526", "001683", "003606", "001295", "004795", "000558", "001715", "002902", "001328", "000590", "001747", "001360", "002515", "004859", "000622", "001779", "002966", "001392", "004891", "000654", "001811", "003735", "002579", "003767", "002611", "004955", "001875", "003799", "003062", "002643", "000750", "005019", "001939", "003863", "000046", "003126", "005051", "000814", "003896", "000078", "003158", "002739", "005083", "000846", "002003", "000878", "002035", "003960", "004379", "002803", "000910", "002067", "003992", "004411", "000174", "005179", "003928", "004347", "000110", "005115", "002099", "004024", "004443", "003286", "002867", "000974", "004056", "003318", "005243", "001006", "002163", "004088", "004507", "000270", "005278", "001041", "000305", "001462", "003385", "005310", "002230", "004155", "004574", "000337", "005342", "002262", "004187", "004606", "001558", "005406", "002326", "004251", "000433", "003513", "005438", "004283", "004702", "001526", "005374", "001137", "004638", "000401", "000465", "001654", "002422", "004766", "000529", "001686", "001298", "004798", "001718", "003641", "001331", "002486", "004830", "000593", "001750", "002937", "001363", "002518", "000625", "001782", "002969", "001395", "004894", "001622", "005470", "001233", "004315", "001814", "001427", "004926", "001846", "003770", "004958", "000721", "005022", "001942", "000049", "003129", "002710", "005054", "000817", "001974", "003899", "000081", "000849", "002006", "003931", "000113", "003193", "002774", "002038", "003963", "004382", "003802", "003065", "002646", "000753", "001910", "003834", "000017", "000913", "002070", "003995", "005182", "002806", "000945", "004027", "004446", "003289", "000977", "002134", "004059", "000241", "005246", "001009", "002166", "004091", "004510", "000273", "003353", "001044", "002201", "004126", "004545", "000308", "001465", "005313", "001076", "002233", "004158", "001497", "005345", "001108", "002265", "004190", "004609", "000372", "005377", "001140", "002297", "004222", "004641", "000404", "001561", "005409", "001172", "004254", "004673", "001593", "005473", "003516", "001236", "005441", "002393", "004318", "002361", "004286", "004705", "001657", "000468", "001269", "001625", "004801", "000564", "004769", "003644", "000532", "001301", "001753", "002940", "001366", "002521", "004865", "000660", "000628", "003741", "003004", "003709", "001430", "004929", "002972", "001398", "000692", "001881", "001849", "003773", "003805", "003068", "002617", "004961", "002649", "001913", "004993", "003837", "000020", "003100", "005025", "001977", "003870", "003902", "000084", "002713", "005057", "000820", "002009", "003934", "000116", "002777", "002041", "003966", "004385", "000148", "005153", "000916", "002073", "003998", "000180", "005185", "004449", "000212", "003292", "002137", "004062", "004481", "000244", "005249", "001012", "002169", "004094", "000276", "005284", "001047", "002204", "004129", "004548", "000311", "005316", "001079", "002236", "004161", "004580", "001500", "003423", "005348", "000852", "002268", "004193", "000375", "001532", "005380", "001143", "002300", "004225", "004644", "001207", "002364", "000471", "003551", "001239", "002396", "001660", "003583", "001272", "002428", "004772", "000535", "003615", "001304", "000567", "002911", "001337", "002492", "000599", "003679", "002524", "004868", "000631", "001788", "003712", "002975", "001401", "000663", "001820", "003744", "001433", "004932", "000695", "003776", "002620", "004964", "000727", "001884", "003808", "003071", "000759", "001916", "003840", "000023", "002684", "005028", "000791", "001948", "003873", "000055", "005060", "001980", "003905", "000087", "002748", "005092", "000855", "002012", "003937", "004356", "003199", "002780", "005124", "000887", "002044", "003969", "004388", "001564", "001175", "002332", "004257", "004676", "001596", "000151", "002812", "005156", "000919", "004001", "004420", "000951", "002108", "004033", "002876", "005220", "000983", "004065", "004484", "005252", "002172", "004097", "004516", "005287", "001050", "002207", "000314", "005319", "001082", "002239", "004583", "001503", "003426", "005351", "002271", "004196", "004615", "001535", "003458", "005383", "001146", "002303", "004228", "001567", "003490", "005415", "001178", "002335", "000442", "004260", "001599", "003522", "001210", "005479", "001242", "002399", "004743", "000506", "001663", "003586", "001275", "002431", "004775", "000538", "001695", "001307", "002463", "004807", "001727", "003650", "001340", "002495", "000602", "001759", "003682", "002946", "001372", "002527", "004871", "001791", "003715", "001404", "002559", "000666", "001823", "003747", "001436", "002591", "004935", "000698", "001855", "003779", "003042", "002623", "004967", "001887", "003811", "004999", "000762", "001919", "003843", "000026", "005031", "000794", "001951", "000058", "004292", "004711", "005063", "000826", "001983", "003908", "000090", "002015", "004359", "000122", "003202", "002783", "005127", "000890", "002047", "003972", "004391", "002815", "000922", "002079", "004004", "002111", "004036", "004455", "000218", "005223", "002143", "004068", "000250", "003330", "005255", "004100", "004103", "005290", "001053", "004135", "004554", "000317", "003397", "005322", "001085", "002242", "004167", "004586", "000349", "001506", "005354", "002274", "004618", "000381", "001538", "003461", "005386", "001149", "002306", "004231", "000413", "001570", "001181", "004263", "004682", "000445", "005450", "001213", "002370", "004295", "005482", "001245", "002402", "004327", "004746", "001278", "002434", "004778", "000541", "001698", "002466", "004810", "000573", "001730", "001343", "002498", "004842", "001762", "001375", "004874", "000637", "001794", "003718", "001407", "002562", "004906", "000669", "003750", "003013", "001439", "002594", "001858", "003782", "004970", "000733", "001890", "003814", "003077", "002658", "005002", "001922", "003846", "000029", "005034", "000797", "001954", "000061", "002722", "005066", "000829", "001986", "003911", "000093", "005098", "000861", "003943", "004362", "000125", "005130", "002050", "003975", "005162", "002082", "004007", "004426", "003269", "005194", "000957", "004039", "004458", "000221", "002882", "005226", "000989", "002146", "004071", "004490", "005258", "001021", "002178", "002181", "004106", "004525", "000288", "005293", "001056", "004138", "000320", "001477", "005325", "001088", "002245", "004170", "000352", "001509", "005357", "004202", "004621", "001541", "003464", "001152", "002309", "004234", "000416", "001573", "003496", "005421", "001184", "004266", "004685", "000448", "001605", "005453", "001216", "002373", "004298", "004717", "001637", "005485", "001248", "004330", "004749", "000512", "001669", "001281", "004781", "000544", "004813", "000576", "002920", "004845", "000608", "001765", "002952", "001378", "002533", "004877", "001797", "003721", "004909", "001829", "003753", "001442", "002597", "004941", "000704", "001861", "003785", "002629", "000736", "001893", "003849", "003817", "000032", "003080", "005037", "005005", "000800", "000768", "001957", "001925", "003882", "002725", "000064", "005069", "003144", "000832", "002757", "005101", "003914", "000864", "000096", "003208", "003946", "004365", "002789", "005133", "002053", "003978", "004397", "000192", "003272", "002853", "005197", "005165", "002117", "000928", "002085", "004010", "004042", "004461", "002885", "005229", "000992", "004074", "004109", "004528", "000291", "001448", "005296", "001059", "004141", "000323", "001480", "005328", "001091", "002248", "004173", "004592", "000355", "003435", "005360", "001123", "004205", "004624", "001544", "005392", "001155", "004493", "000256", "001027", "002184", "002312", "004237", "000419", "001576", "003499", "005424", "001187", "002344", "004269", "004688", "000451", "003531", "005456", "001219", "002376", "004301", "004720", "000483", "001640", "005488", "001252", "002408", "003595", "001284", "004784", "000547", "003627", "002891", "002472", "004816", "000579", "001736", "001349", "002504", "000611", "001768", "003691", "002955", "001381", "002536", "004880", "000643", "001800", "003724", "002987", "002568", "004912", "000675", "001832", "003756", "003019", "002600", "000707", "003788", "004976", "000739", "001896", "003820", "000003", "005008", "000771", "001928", "003852", "000035", "003115", "005040", "000803", "000067", "002728", "005072", "000835", "003917", "004336", "000099", "005104", "000867", "003949", "004368", "000131", "005136", "000899", "003981", "002824", "000931", "002088", "004013", "000195", "005200", "000963", "004045", "004464", "000227", "005232", "000995", "002152", "004077", "004496", "003339", "005264", "002187", "004112", "004531", "000294", "005299", "001062", "002219", "004144", "000326", "001483", "003406", "005331", "001094", "002251", "004176", "004595", "000358", "005363", "002283", "004208", "004627", "001547", "003470", "005395", "004240", "004659", "001579", "003502", "005427", "001190", "004272", "004691", "001611", "003534", "005459", "001222", "002379", "004304", "004723", "000486", "001643", "003566", "002411", "004755", "003598", "002443", "004787", "000550", "001707", "004819", "001739", "003662", "001352", "001771", "003694", "001384", "004883", "000646", "003727", "002990", "004915", "000678", "001835", "003759", "002603", "004947", "000710", "001867", "003791", "004979", "000742", "001899", "003823", "003086", "005011", "001931", "003855", "000038", "005043", "000806", "001963", "003888", "000070", "002731", "005075", "001995", "003920", "000102", "005107", "003952", "004371", "000134", "002795", "005139", "002059", "003984", "004403", "000934", "004016", "003278", "000966", "002123", "004048", "004467", "000230", "003310", "005235", "000998", "002155", "004080", "004499", "000262", "005270", "001033", "002190", "004534", "000297", "001454", "005302", "004147", "000329", "001486", "005334", "001097", "004179", "000361", "001518", "003441", "005366", "001129", "004211", "004630", "000393", "001550", "003473", "004243", "004662", "000425", "001582", "003505", "005430", "001193", "004275", "004694", "000457", "001614", "001225", "002382", "004307", "000489", "001646", "001258", "000521", "001290", "004790", "001710", "002897", "001322", "002478", "001742", "002929", "001355", "002510", "000617", "001774", "001387", "002542", "004886", "000649", "002993", "002574", "000681", "003762", "003025", "004950", "000713", "001870", "003794", "003826", "003089", "000777", "001934", "000041", "005046", "001966", "003891", "000073", "005078", "000841", "001998", "003923", "000105", "002766", "005110", "000873", "002030", "003955", "004374", "002798", "005142", "000905", "002062", "003987", "004406", "000169", "002830", "005174", "000937", "002094", "004019", "003281", "005206", "002126", "004051", "004470", "000233", "003313", "002158", "004083", "000265", "005273", "001036", "004118", "004537", "000300", "001457", "005305", "001068", "002225", "004150", "004569", "000332", "001489", "003412", "005337", "001100", "004182", "004601", "001521", "003444", "005369", "001132", "002289", "004214", "004633", "000396", "001553", "001164", "002321", "004246", "001585", "005433", "001196", "004278", "005465", "001228", "004310", "004729", "001649", "003572", "001261", "002417", "004761", "001681", "003604", "001293", "004793", "000556", "001713", "003636", "002481", "004825", "000588", "001745", "002932", "001358", "002513", "004857", "000620", "001777", "003701", "002545", "004889", "000652", "001809", "003733", "001422", "002577", "004921", "000684", "003765", "002609", "004953", "001873", "003797", "003060", "002641", "004985", "000748", "001905", "003829", "000012", "005017", "000780", "003861", "000044", "002705", "005049", "000812", "001969", "003894", "000076", "003156", "005081", "000844", "002001", "003926", "004345", "000108", "005113", "003958", "003220", "002801", "002065", "003990", "004409", "000172", "002833", "005177", "000940", "002097", "004441", "004473", "000236", "005241", "001004", "002161", "004086", "000268", "005276", "001039", "002196", "004121", "000303", "001460", "005308", "001071", "002260", "004185", "004604", "001524", "003447", "005372", "001135", "002292", "004636", "000399", "001556", "005404", "001167", "002324", "004668", "000431", "003511", "005436", "001199", "002356", "004700", "000463", "001620", "005468", "001231", "002388", "004313", "004732", "000495", "001652", "001264", "004764", "000527", "003607", "002452", "004796", "000559", "001716", "003639", "002903", "001329", "002484", "004828", "001748", "003671", "002516", "004860", "001780", "002967", "001393", "002548", "004892", "000655", "001812", "003736", "002580", "000687", "001844", "003768", "002228", "004153", "000335", "001492", "002612", "004956", "000719", "003800", "003063", "002644", "004988", "000751", "001908", "003832", "000015", "003095", "005020", "003864", "000047", "003127", "002708", "005052", "000815", "001972", "003897", "000079", "003159", "005084", "002004", "003929", "004348", "000111", "002772", "005116", "002036", "003961", "004380", "000143", "003223", "002804", "002068", "003993", "004412", "000175", "005180", "002100", "004025", "000207", "003287", "005212", "000975", "002132", "004476", "003319", "005244", "001007", "004089", "000271", "005279", "001042", "002199", "004124", "004543", "005311", "002231", "004156", "000338", "001495", "005343", "001106", "002263", "004188", "004607", "000370", "001527", "003450", "005375", "001138", "002295", "004639", "000402", "001559", "003482", "005407", "001170", "002327", "004252", "000434", "001591", "003514", "005439", "001202", "002359", "004284", "004703", "000466", "001234", "002391", "004316", "004735", "000498", "001267", "004767", "000530", "001687", "001299", "002455", "004799", "000562", "001719", "003642", "001332", "002487", "001751", "001364", "000626", "001783", "003707", "002970", "001396", "002551", "000658", "001815", "003739", "001428", "004927", "000690", "003771", "003034", "002615", "004959", "000722", "003803", "004991", "000754", "001911", "000018", "003098", "005023", "000786", "001943", "003868", "000050", "002711", "005055", "001975", "003900", "000082", "005087", "000850", "003932", "004351", "000114", "003194", "002039", "003964", "004383", "000146", "002807", "000914", "002071", "002839", "005183", "000946", "002103", "004028", "004447", "000210", "005215", "000978", "004060", "004479", "000242", "005247", "001010", "002167", "004511"]
        if not train_set:
            path = os.path.join(self.root_dir, self.data_dir)
            file_list = os.listdir(path)
            self.image_ids = tuple(map(lambda x: x.split(".")[0], file_list))
        self.load_classes()

    def load_classes(self):

        # load class names (name -> label)
        """categories = self.coco.loadCats(self.coco.getCatIds())
        categories.sort(key=lambda x: x['id'])"""

        self.classes = {"barcode": 0}
        #for c in categories:
        #    self.classes[c['name']] = len(self.classes)

        # also load the reverse (label -> name)
        self.labels = {}
        for key, value in self.classes.items():
            self.labels[value] = key

    def __len__(self):
        return len(self.image_ids)

    def __getitem__(self, idx):
        img = self.load_image(idx)
        annot = self.load_annotations(idx)
        sample = {'img': img, 'annot': annot}
        if self.transform:
            sample = self.transform(sample)
        return sample

    def load_image(self, image_index):
        #image_info = self.coco.loadImgs(self.image_ids[image_index])[0]
        #path = os.path.join(self.root_dir, self.set_name, image_info['file_name'])

        path = "{}/{}/{}.jpg".format(self.root_dir, self.data_dir, self.image_ids[image_index])
        img = cv2.imread(path)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

        return img.astype(np.float32) / 255.

    def load_annotations(self, image_index):
        # get ground truth annotations
        #annotations_ids = self.coco.getAnnIds(imgIds=self.image_ids[image_index], iscrowd=False)
        ann_path = "{}/{}/{}.png".format(self.root_dir, self.ann_dir, self.image_ids[image_index])
        gt_mask = cv2.imread(ann_path, 0)
        obj_masks = tuple(ndimage.find_objects(ndimage.label(gt_mask)[0]))

        annotations = np.zeros((0, 5))

        # some images appear to miss annotations
        if not len(obj_masks):
            return annotations

        # parse annotations
        #coco_annotations = self.coco.loadAnns(annotations_ids)
        for idx, mask_slice in enumerate(obj_masks):
            # format bbox into [x, y, w, h] from H x W
            vertical_slice, horizontal_slice = mask_slice
            height = vertical_slice.stop - vertical_slice.start
            width = horizontal_slice.stop - horizontal_slice.start

            # some annotations have basically no width / height, skip them
            if height < 1 or width < 1:
                continue

            annotation = np.zeros((1, 5))
            annotation[0, :4] = np.array([
                horizontal_slice.start, horizontal_slice.stop,
                vertical_slice.start, vertical_slice.stop,
            ])#a['bbox']
            annotation[0, 4] = 0#a['category_id'] - 1
            annotations = np.append(annotations, annotation, axis=0)

        # transform from [x, y, w, h] to [x1, y1, x2, y2]
        #annotations[:, 2] = annotations[:, 0] + annotations[:, 2]
        #annotations[:, 3] = annotations[:, 1] + annotations[:, 3]

        return annotations

#----------------------------------------------------------------------------
class CocoDataset(Dataset):
    def __init__(self, root_dir, set='train2017', transform=None):

        self.root_dir = root_dir
        self.set_name = set
        self.transform = transform

        self.coco = COCO(os.path.join(self.root_dir, 'annotations', 'instances_' + self.set_name + '.json'))
        self.image_ids = self.coco.getImgIds()

        self.load_classes()

    def load_classes(self):

        # load class names (name -> label)
        categories = self.coco.loadCats(self.coco.getCatIds())
        categories.sort(key=lambda x: x['id'])

        self.classes = {}
        for c in categories:
            self.classes[c['name']] = len(self.classes)

        # also load the reverse (label -> name)
        self.labels = {}
        for key, value in self.classes.items():
            self.labels[value] = key

    def __len__(self):
        return len(self.image_ids)

    def __getitem__(self, idx):

        img = self.load_image(idx)
        annot = self.load_annotations(idx)
        sample = {'img': img, 'annot': annot}
        if self.transform:
            sample = self.transform(sample)
        return sample

    def load_image(self, image_index):
        image_info = self.coco.loadImgs(self.image_ids[image_index])[0]
        path = os.path.join(self.root_dir, self.set_name, image_info['file_name'])
        img = cv2.imread(path)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

        return img.astype(np.float32) / 255.

    def load_annotations(self, image_index):
        # get ground truth annotations
        annotations_ids = self.coco.getAnnIds(imgIds=self.image_ids[image_index], iscrowd=False)
        annotations = np.zeros((0, 5))

        # some images appear to miss annotations
        if len(annotations_ids) == 0:
            return annotations

        # parse annotations
        coco_annotations = self.coco.loadAnns(annotations_ids)
        for idx, a in enumerate(coco_annotations):

            # some annotations have basically no width / height, skip them
            if a['bbox'][2] < 1 or a['bbox'][3] < 1:
                continue

            annotation = np.zeros((1, 5))
            annotation[0, :4] = a['bbox']
            annotation[0, 4] = a['category_id'] - 1
            annotations = np.append(annotations, annotation, axis=0)

        # transform from [x, y, w, h] to [x1, y1, x2, y2]
        annotations[:, 2] = annotations[:, 0] + annotations[:, 2]
        annotations[:, 3] = annotations[:, 1] + annotations[:, 3]

        return annotations


def collater(data):
    imgs = [s['img'] for s in data]
    annots = [s['annot'] for s in data]
    scales = [s['scale'] for s in data]

    imgs = torch.from_numpy(np.stack(imgs, axis=0))

    max_num_annots = max(annot.shape[0] for annot in annots)

    if max_num_annots > 0:

        annot_padded = torch.ones((len(annots), max_num_annots, 5)) * -1

        for idx, annot in enumerate(annots):
            if annot.shape[0] > 0:
                annot_padded[idx, :annot.shape[0], :] = annot
    else:
        annot_padded = torch.ones((len(annots), 1, 5)) * -1

    imgs = imgs.permute(0, 3, 1, 2)

    return {'img': imgs, 'annot': annot_padded, 'scale': scales}


class Resizer(object):
    """Convert ndarrays in sample to Tensors."""
    
    def __init__(self, img_size=512):
        self.img_size = img_size

    def __call__(self, sample):
        image, annots = sample['img'], sample['annot']
        height, width, _ = image.shape
        if height > width:
            scale = self.img_size / height
            resized_height = self.img_size
            resized_width = int(width * scale)
        else:
            scale = self.img_size / width
            resized_height = int(height * scale)
            resized_width = self.img_size

        image = cv2.resize(image, (resized_width, resized_height), interpolation=cv2.INTER_LINEAR)

        new_image = np.zeros((self.img_size, self.img_size, 3))
        new_image[0:resized_height, 0:resized_width] = image

        annots[:, :4] *= scale

        return {'img': torch.from_numpy(new_image).to(torch.float32), 'annot': torch.from_numpy(annots), 'scale': scale}


class Augmenter(object):
    """Convert ndarrays in sample to Tensors."""

    def __call__(self, sample, flip_x=0.5):
        if np.random.rand() < flip_x:
            image, annots = sample['img'], sample['annot']
            image = image[:, ::-1, :]

            rows, cols, channels = image.shape

            x1 = annots[:, 0].copy()
            x2 = annots[:, 2].copy()

            x_tmp = x1.copy()

            annots[:, 0] = cols - x2
            annots[:, 2] = cols - x_tmp

            sample = {'img': image, 'annot': annots}

        return sample


class Normalizer(object):

    def __init__(self, mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]):
        self.mean = np.array([[mean]])
        self.std = np.array([[std]])

    def __call__(self, sample):
        image, annots = sample['img'], sample['annot']

        return {'img': ((image.astype(np.float32) - self.mean) / self.std), 'annot': annots}
